#version 430

layout(vertices = 16) out;

in vec2 TexCoord1[];
out vec2 TexCoord2[];

uniform vec3 ViewPos;

uniform int TessFactor = 600;
uniform float TessSlope = 1.8;
uniform float TessShift = -0.3;

const int AB = 2;
const int BC = 3;
const int CD = 0;
const int DA = 1;

float LODfactor(float distance){
	float tessLevel = max(0.0,TessFactor/(pow(distance, TessSlope)) - TessShift);

	tessLevel = 1.0;

	return tessLevel;
}

void main() {
	if(gl_InvocationID == 0) {
			vec3 abMid = vec3((gl_in[0].gl_Position.x + gl_in[3].gl_Position.x)/2, 
							  (gl_in[0].gl_Position.y + gl_in[3].gl_Position.y)/2, 
							  (gl_in[0].gl_Position.z + gl_in[3].gl_Position.z)/2);
			vec3 bcMid = vec3((gl_in[3].gl_Position.x + gl_in[15].gl_Position.x)/2,
							  (gl_in[3].gl_Position.y + gl_in[15].gl_Position.y)/2,
							  (gl_in[3].gl_Position.z + gl_in[15].gl_Position.z)/2);
			vec3 cdMid = vec3((gl_in[15].gl_Position.x + gl_in[12].gl_Position.x)/2,
							  (gl_in[15].gl_Position.y + gl_in[12].gl_Position.y)/2,
							  (gl_in[15].gl_Position.z + gl_in[12].gl_Position.z)/2);
			vec3 daMid = vec3((gl_in[12].gl_Position.x + gl_in[0].gl_Position.x)/2, 
							  (gl_in[12].gl_Position.y + gl_in[0].gl_Position.y)/2, 
							  (gl_in[12].gl_Position.z + gl_in[0].gl_Position.z)/2);
	
			float distanceAB = distance(abMid, ViewPos);
			float distanceBC = distance(bcMid, ViewPos);
			float distanceCD = distance(cdMid, ViewPos);
			float distanceDA = distance(daMid, ViewPos);
			
			gl_TessLevelOuter[AB] = mix(1, gl_MaxTessGenLevel, LODfactor(distanceAB));
			gl_TessLevelOuter[BC] = mix(1, gl_MaxTessGenLevel, LODfactor(distanceBC));
			gl_TessLevelOuter[CD] = mix(1, gl_MaxTessGenLevel, LODfactor(distanceCD));
			gl_TessLevelOuter[DA] = mix(1, gl_MaxTessGenLevel, LODfactor(distanceDA));
	
			

			gl_TessLevelOuter[0] = 1.0;
			gl_TessLevelOuter[1] = 1.0;
			gl_TessLevelOuter[2] = 1.0;
			gl_TessLevelOuter[3] = 1.0;

			gl_TessLevelInner[0] = (gl_TessLevelOuter[BC] + gl_TessLevelOuter[DA]) / 4.0;
			gl_TessLevelInner[1] = (gl_TessLevelOuter[AB] + gl_TessLevelOuter[CD]) / 4.0;
	}
	
	gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;
	TexCoord2[gl_InvocationID] = TexCoord1[gl_InvocationID];
}

